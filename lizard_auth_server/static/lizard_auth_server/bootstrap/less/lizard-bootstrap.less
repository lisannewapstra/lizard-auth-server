// Overridden Bootstrap typography
@baseFontSize:          13px;
@baseLineHeight:        18px;

// Our colors. Dark and middle green; light is gray.
@dark: #115e67;
@middle: #7fa9ae;
@light: #d9d9d6;

// Border color for bars that we colors with our light color.
@lightBorderColor: darken(@light, 10%);

// A green navbar. We customize bootstrap's navbar colors here.
@navbarBackground:                @dark;
@navbarBackgroundHighlight:       @middle;
@navbarText:                      @white;
@navbarLinkColor:                 @white;
@navbarLinkColorHover:            @light;

// Bootstrap's link color is used in a lot of places. I'd rather keep it blue,
// but just making it @dark is easier for customization.
@linkColor: @dark;

// Horizontal bar height. This 40px is somehow what comes out of bootstrap's
// calculations, but we just set it here. We need it for placement of the main
// elements.
@barHeight: 40px;

// Our horizontal bar class is basically the same as bootstrap's navbar, but
// without the bottom margin. And with the right height explicitly set.
.horizontal-bar {
  .navbar;
  margin-bottom: 0;  // Overrides .navbar's bottom margin.
  height: @barHeight;
  div, ul {
    // Divs nested inside us get the right height, too.
    height: @barHeight;
  }
}

// Blocks inside a horizontal bar (like the logo or sidebar-actions) get a
// proper padding.
.block-in-bar {
  padding-left: @baseFontSize;
  padding-right: @baseFontSize;
}

// Arrangement of sidebar, content and footer.
// See http://blog.stevensanderson.com/2011/10/05/
// full-height-app-layouts-a-css-trick-to-make-it-easier/
.fullRow, .fullCol {
  position: absolute;
  overflow: auto;
}
.fullRow {
  left: 0;
  right: 0;
}
.fullCol {
  top: 0;
  bottom: 0;
}
.scroll-y {
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}
.scroll-x {
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

// And to make sure there are no scrollbars when we slide a sidebar out, the
// page needs to have overflow hidden.
html,
body {
  // WARNING: this potentially makes _everything_ invisible in IE7
  overflow: hidden;
}

// Two variables to help with positioning. They include the 1px border.
@belowTopBars: 2 * @barHeight + 1;
@aboveFooter: @barHeight + 1;
// And we need the sidebar width, too, for positioning.
@sidebarWidth: 300px;
@rightbarWidth: 250px;

// These never need scroll.
header, #footer {
  overflow: hidden;
}

// Top-most bar.
#logo-row {
  .horizontal-bar;
  #gradient > .vertical(lighten(@navbarBackground, 10%), @navbarBackground);
}

// Second bar, below the logo one.
#breadcrumb-row {
  .horizontal-bar;
  #gradient > .vertical(lighten(@light, 10%), @light);
  border-bottom: 1px solid @lightBorderColor;
}

// Bar at the bottom.
#footer {
  .horizontal-bar;
  #gradient > .vertical(@light, lighten(@light, 10%));
  border-top: 1px solid @lightBorderColor;
  // Placement. Full width and stuck to the bottom.
  .fullRow;
  bottom: 0;
  .btn-toolbar {
    margin-top: 0;
    margin-bottom: 0;
  }
  button {
    margin-top: 5px;
  }
}

// The sidebar sits beween the horizontal bars on the left. It is scrollable.
#sidebar,
#rightbar,
#secondary-sidebar {
  .fullCol;
  top: @belowTopBars;
  bottom: @aboveFooter;
  width: @sidebarWidth;
  #gradient > .vertical(lighten(@light, 10%), #fff);
  border-right: 1px solid @lightBorderColor;
}
#rightbar {
  width: @rightbarWidth;
  right: -@rightbarWidth;
  display: none;
}

// The main content area sits between the horizontal bars, next to the
// sidebar.
#content {
  position: absolute;
  left: 0;
  right: 0;
  top: @belowTopBars;
  left: @sidebarWidth + 1;  // Extra pixel for the border.
  bottom: @aboveFooter;
  overflow: auto;
}

// Every bar is divided into two; the following parts are floated to the left.
#logo,
#breadcrumbs,
#sidebar-actions {
  .block-in-bar;
  float: left;
}

// The following actions are floated right.
#site-actions,
#content-actions,
#rightbar-actions {
  .block-in-bar;
  .pull-right;
}

// The stuff in the bottom bar below the content is for orthogonal selection
// of settings related to the content, for example the date of the data that is
// displayed. It really belongs to the other selection choices that are made
// in the sidebar. So we want it to float left near the sidebar.
#orthogonal-actions {
  .block-in-bar;
  float: left;
}

// The orthogonal-actions floats left, so we need to give the sidebar-actions
// some width to compensate. Sidebar width minus twice the padding.
#sidebar-actions {
  width: @sidebarWidth - 2 * @baseFontSize;
}

// The rightbar actions need some space, too.
#rightbar-actions {
  width: @rightbarWidth - 2 * @baseFontSize;
  .btn-group {
    .pull-right;
  }
}

// We want button groups in the navbar (well, mostly in the
// orthogonal-actions bar). Best way to get them next to each other if there
// are multiple button groups is a toolbar. But we need to strip some margin
// off that.
.navbar {
  .btn-toolbar {
    margin-top: 0;
  }
}

// Strip shadow from the default Bootstrap style
// as requested by the designers.
.navbar .nav > li > a {
  text-shadow: none;
}

// Fix for invisible GMaps tiles
// overrides bootstraps reset.less
img {
  max-width: none !important;
}
